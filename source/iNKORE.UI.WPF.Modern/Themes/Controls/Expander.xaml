<!--  Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information.  -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Controls"
    xmlns:primitives="clr-namespace:iNKORE.UI.WPF.Modern.Controls.Primitives"
    xmlns:converters="clr-namespace:iNKORE.UI.WPF.Modern.Common.Converters"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:chelper="clr-namespace:iNKORE.UI.WPF.Modern.Controls.Helpers"
    xmlns:ikw="http://schemas.inkore.net/lib/ui/wpf"
    xmlns:common="clr-namespace:iNKORE.UI.WPF.Modern.Common" 
    xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <ikw:CornerRadiusFilterConverter x:Key="TopCornerRadiusFilterConverter" Filter="Top" />
            <ikw:CornerRadiusFilterConverter x:Key="RightCornerRadiusFilterConverter" Filter="Right" />
            <ikw:CornerRadiusFilterConverter x:Key="BottomCornerRadiusFilterConverter" Filter="Bottom" />
            <ikw:CornerRadiusFilterConverter x:Key="LeftCornerRadiusFilterConverter" Filter="Left" />
            <ikw:SizeToRectConverter x:Key="SizeToRectConverter" />
            <converters:MultiplyConverter x:Key="MultiplyConverter"/>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ExpanderCardHeaderDownStyle" TargetType="ToggleButton">
        <Setter Property="chelper:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="Padding" Value="{DynamicResource ExpanderHeaderHorizontalPadding}" />
        <Setter Property="chelper:FocusVisualHelper.FocusVisualMargin" Value="-3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="ToggleButtonGrid"
                        Width="{TemplateBinding Width}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        chelper:FocusVisualHelper.IsTemplateFocusTarget="True"
                        CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}">
                        <Grid SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <local:ContentPresenterEx
                                x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                            <Border
                                x:Name="ExpandCollapseChevronBorder"
                                Grid.Column="1"
                                Width="{DynamicResource ExpanderChevronButtonSize}"
                                Height="{DynamicResource ExpanderChevronButtonSize}"
                                Margin="{DynamicResource ExpanderChevronHorizontalMargin}"
                                Background="{DynamicResource ExpanderChevronBackground}"
                                BorderBrush="{DynamicResource ExpanderChevronBorderBrush}"
                                BorderThickness="{DynamicResource ExpanderChevronBorderThickness}"
                                CornerRadius="{DynamicResource ControlCornerRadius}">
                                <local:FontIcon
                                    x:Name="ExpandCollapseChevron"
                                    Width="{DynamicResource ExpanderChevronGlyphSize}"
                                    Height="{DynamicResource ExpanderChevronGlyphSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="{DynamicResource FluentSystemIcons}"
                                    FontSize="12"
                                    Foreground="{DynamicResource ExpanderChevronForeground}"
                                    Glyph="{DynamicResource ExpanderChevronDownGlyph}"
                                    RenderTransformOrigin="0.5, 0.5"
                                    SnapsToDevicePixels="false">
                                    <local:FontIcon.RenderTransform>
                                        <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                    </local:FontIcon.RenderTransform>
                                </local:FontIcon>
                            </Border>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="180.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="0.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForeground}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPointerOver}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPointerOverForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPointerOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPressed}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPressedForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderCardHeaderUpStyle" TargetType="ToggleButton">
        <Setter Property="chelper:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="Padding" Value="{DynamicResource ExpanderHeaderHorizontalPadding}" />
        <Setter Property="chelper:FocusVisualHelper.FocusVisualMargin" Value="-3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="ToggleButtonGrid"
                        Width="{TemplateBinding Width}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}">
                        <Grid SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <local:ContentPresenterEx
                                x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                            <Border
                                x:Name="ExpandCollapseChevronBorder"
                                Grid.Column="1"
                                Width="{DynamicResource ExpanderChevronButtonSize}"
                                Height="{DynamicResource ExpanderChevronButtonSize}"
                                Margin="{DynamicResource ExpanderChevronHorizontalMargin}"
                                Background="{DynamicResource ExpanderChevronBackground}"
                                BorderBrush="{DynamicResource ExpanderChevronBorderBrush}"
                                BorderThickness="{DynamicResource ExpanderChevronBorderThickness}"
                                CornerRadius="{DynamicResource ControlCornerRadius}">
                                <local:FontIcon
                                    x:Name="ExpandCollapseChevron"
                                    Width="{DynamicResource ExpanderChevronGlyphSize}"
                                    Height="{DynamicResource ExpanderChevronGlyphSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="{DynamicResource FluentSystemIcons}"
                                    FontSize="12"
                                    Foreground="{DynamicResource ExpanderChevronForeground}"
                                    Glyph="{DynamicResource ExpanderChevronUpGlyph}"
                                    RenderTransformOrigin="0.5, 0.5"
                                    SnapsToDevicePixels="false">
                                    <local:FontIcon.RenderTransform>
                                        <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                    </local:FontIcon.RenderTransform>
                                </local:FontIcon>
                            </Border>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="180.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="0.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForeground}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPointerOver}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPointerOverForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPointerOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPressed}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPressedForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderCardHeaderLeftStyle" TargetType="ToggleButton">
        <Setter Property="chelper:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="Padding" Value="{DynamicResource ExpanderHeaderVerticalPadding}" />
        <Setter Property="chelper:FocusVisualHelper.FocusVisualMargin" Value="-3" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="ToggleButtonGrid"
                        Width="{TemplateBinding Width}"
                        MinWidth="{TemplateBinding MinHeight}"
                        MinHeight="{TemplateBinding MinWidth}"
                        MaxHeight="{TemplateBinding MaxWidth}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}">
                        <Grid SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <local:ContentPresenterEx
                                x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True">
                                <local:ContentPresenterEx.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </local:ContentPresenterEx.LayoutTransform>
                            </local:ContentPresenterEx>
                            <Border
                                x:Name="ExpandCollapseChevronBorder"
                                Grid.Row="1"
                                Width="{DynamicResource ExpanderChevronButtonSize}"
                                Height="{DynamicResource ExpanderChevronButtonSize}"
                                Margin="{DynamicResource ExpanderChevronVerticalMargin}"
                                Background="{DynamicResource ExpanderChevronBackground}"
                                BorderBrush="{DynamicResource ExpanderChevronBorderBrush}"
                                BorderThickness="{DynamicResource ExpanderChevronBorderThickness}"
                                CornerRadius="{DynamicResource ControlCornerRadius}">
                                <local:FontIcon
                                    x:Name="ExpandCollapseChevron"
                                    Width="{DynamicResource ExpanderChevronGlyphSize}"
                                    Height="{DynamicResource ExpanderChevronGlyphSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="{DynamicResource FluentSystemIcons}"
                                    FontSize="12"
                                    Foreground="{DynamicResource ExpanderChevronForeground}"
                                    Glyph="{DynamicResource ExpanderChevronChevronLeftGlyph}"
                                    RenderTransformOrigin="0.5, 0.5"
                                    SnapsToDevicePixels="false">
                                    <local:FontIcon.RenderTransform>
                                        <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                    </local:FontIcon.RenderTransform>
                                </local:FontIcon>
                            </Border>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="180.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="0.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForeground}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPointerOver}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPointerOverForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPointerOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPressed}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPressedForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderCardRightHeaderRightStyle" TargetType="ToggleButton">
        <Setter Property="chelper:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="Padding" Value="{DynamicResource ExpanderHeaderVerticalPadding}" />
        <Setter Property="chelper:FocusVisualHelper.FocusVisualMargin" Value="-3" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="ToggleButtonGrid"
                        Width="{TemplateBinding Width}"
                        MinWidth="{TemplateBinding MinHeight}"
                        MinHeight="{TemplateBinding MinWidth}"
                        MaxHeight="{TemplateBinding MaxWidth}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}">
                        <Grid SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <local:ContentPresenterEx
                                x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True">
                                <local:ContentPresenterEx.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </local:ContentPresenterEx.LayoutTransform>
                            </local:ContentPresenterEx>
                            <Border
                                x:Name="ExpandCollapseChevronBorder"
                                Grid.Row="1"
                                Width="{DynamicResource ExpanderChevronButtonSize}"
                                Height="{DynamicResource ExpanderChevronButtonSize}"
                                Margin="{DynamicResource ExpanderChevronVerticalMargin}"
                                Background="{DynamicResource ExpanderChevronBackground}"
                                BorderBrush="{DynamicResource ExpanderChevronBorderBrush}"
                                BorderThickness="{DynamicResource ExpanderChevronBorderThickness}"
                                CornerRadius="{DynamicResource ControlCornerRadius}">
                                <local:FontIcon
                                    x:Name="ExpandCollapseChevron"
                                    Width="{DynamicResource ExpanderChevronGlyphSize}"
                                    Height="{DynamicResource ExpanderChevronGlyphSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="{DynamicResource FluentSystemIcons}"
                                    FontSize="12"
                                    Foreground="{DynamicResource ExpanderChevronForeground}"
                                    Glyph="{DynamicResource ExpanderChevronChevronRightGlyph}"
                                    RenderTransformOrigin="0.5, 0.5"
                                    SnapsToDevicePixels="false">
                                    <FrameworkElement.RenderTransform>
                                        <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                    </FrameworkElement.RenderTransform>
                                </local:FontIcon>
                            </Border>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="180.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="0.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForeground}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPointerOver}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPointerOverForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPointerOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPressed}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPressedForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPressedBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="ToggleButton">
        <Setter Property="chelper:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource ExpanderHeaderForeground}" />
        <Setter Property="Padding" Value="{DynamicResource ExpanderHeaderPadding}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border 
                        x:Name="ToggleButtonGrid"
                        MinHeight="{TemplateBinding MinHeight}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        Width="{TemplateBinding Width}"
                        Background="{TemplateBinding Background}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                        BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <local:ContentPresenterEx
                                x:Name="ContentPresenter"
                                Content="{TemplateBinding Content}" 
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                Foreground="{TemplateBinding Foreground}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                            <Border x:Name="ExpandCollapseChevronBorder" 
                                    Grid.Column="1"
                                    Width="{DynamicResource ExpanderChevronButtonSize}"
                                    Height="{DynamicResource ExpanderChevronButtonSize}" 
                                    Margin="{DynamicResource ExpanderChevronMargin}" 
                                    CornerRadius="{DynamicResource ControlCornerRadius}" 
                                    BorderBrush="{DynamicResource ExpanderChevronBorderBrush}"
                                    BorderThickness="{DynamicResource ExpanderChevronBorderThickness}" 
                                    Background="{DynamicResource ExpanderChevronBackground}">
                                <local:FontIcon
                                    x:Name="ExpandCollapseChevron"
                                    Icon="{x:Static ui:FluentSystemIcons.ChevronDown_16_Regular}"
                                    FontSize="12"
                                    Width="{DynamicResource ExpanderChevronGlyphSize}" 
                                    Height="{DynamicResource ExpanderChevronGlyphSize}" 
                                    RenderTransformOrigin="0.5, 0.5" 
                                    Foreground="{DynamicResource ExpanderChevronForeground}"
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center">
                                    <FrameworkElement.RenderTransform>
                                        <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                    </FrameworkElement.RenderTransform>
                                </local:FontIcon>
                            </Border>
                        </Grid>
                        
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPointerOverBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPointerOver}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPointerOverForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPointerOverBackground}" />
                        </Trigger>

                        <Trigger  Property="IsPressed" Value="True">
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPressedBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPressed}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPressedForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPressedBackground}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="180.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="0.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderForeground}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="ToggleButton" BasedOn="{StaticResource ExpanderDownHeaderStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border 
                x:Name="ToggleButtonGrid"
                MinHeight="{TemplateBinding MinHeight}"
                MinWidth="{TemplateBinding MinWidth}"
                MaxWidth="{TemplateBinding MaxWidth}"
                Width="{TemplateBinding Width}"
                Background="{TemplateBinding Background}"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <local:ContentPresenterEx
                        x:Name="ContentPresenter"
                        Content="{TemplateBinding Content}" 
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                        Foreground="{TemplateBinding Foreground}"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="True" />
                            <Border x:Name="ExpandCollapseChevronBorder" 
                            Grid.Column="1"
                            Width="{DynamicResource ExpanderChevronButtonSize}"
                            Height="{DynamicResource ExpanderChevronButtonSize}" 
                            Margin="{DynamicResource ExpanderChevronMargin}" 
                            CornerRadius="{DynamicResource ControlCornerRadius}" 
                            BorderBrush="{DynamicResource ExpanderChevronBorderBrush}"
                            BorderThickness="{DynamicResource ExpanderChevronBorderThickness}" 
                            Background="{DynamicResource ExpanderChevronBackground}">
                                <local:FontIcon
                            x:Name="ExpandCollapseChevron"
                            Icon="{x:Static ui:FluentSystemIcons.ChevronUp_16_Regular}"
                            FontSize="12"
                            Width="{DynamicResource ExpanderChevronGlyphSize}" 
                            Height="{DynamicResource ExpanderChevronGlyphSize}" 
                            RenderTransformOrigin="0.5, 0.5" 
                            Foreground="{DynamicResource ExpanderChevronForeground}"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center">
                                    <FrameworkElement.RenderTransform>
                                        <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                    </FrameworkElement.RenderTransform>
                                </local:FontIcon>
                            </Border>
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPointerOverBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPointerOver}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPointerOverForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPointerOverBackground}" />
                        </Trigger>

                        <Trigger  Property="IsPressed" Value="True">
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPressedBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPressed}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPressedForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPressedBackground}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    To="180.0"
                                    Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    To="0.0"
                                    Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderForeground}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="ToggleButton" BasedOn="{StaticResource ExpanderDownHeaderStyle}">
        <Setter Property="Padding" Value="16,4"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border 
                        x:Name="ToggleButtonGrid"
                        MinHeight="{TemplateBinding MinHeight}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        Width="{TemplateBinding Width}"
                        Background="{TemplateBinding Background}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                        BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <local:ContentPresenterEx
                                x:Name="ContentPresenter"
                                Content="{TemplateBinding Content}" 
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                Foreground="{TemplateBinding Foreground}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                            <Border x:Name="ExpandCollapseChevronBorder" 
                                Grid.Row="1"
                                Width="{DynamicResource ExpanderChevronButtonSize}"
                                Height="{DynamicResource ExpanderChevronButtonSize}" 
                                Margin="{DynamicResource ExpanderChevronMargin}" 
                                CornerRadius="{DynamicResource ControlCornerRadius}" 
                                BorderBrush="{DynamicResource ExpanderChevronBorderBrush}"
                                BorderThickness="{DynamicResource ExpanderChevronBorderThickness}" 
                                Background="{DynamicResource ExpanderChevronBackground}">
                                <local:FontIcon
                                    x:Name="ExpandCollapseChevron"
                                    Icon="{x:Static ui:FluentSystemIcons.ChevronRight_16_Regular}"
                                    FontSize="12"
                                    Width="{DynamicResource ExpanderChevronGlyphSize}" 
                                    Height="{DynamicResource ExpanderChevronGlyphSize}" 
                                    RenderTransformOrigin="0.5, 0.5" 
                                    Foreground="{DynamicResource ExpanderChevronForeground}"
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center">
                                    <FrameworkElement.RenderTransform>
                                        <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                    </FrameworkElement.RenderTransform>
                                </local:FontIcon>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPointerOverBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPointerOver}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPointerOverForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPointerOverBackground}" />
                        </Trigger>

                        <Trigger  Property="IsPressed" Value="True">
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPressedBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPressed}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPressedForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPressedBackground}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                            Storyboard.TargetProperty="Angle"
                            To="180.0"
                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                            Storyboard.TargetProperty="Angle"
                            To="0.0"
                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderForeground}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="ToggleButton" BasedOn="{StaticResource ExpanderRightHeaderStyle}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border 
                        x:Name="ToggleButtonGrid"
                        MinHeight="{TemplateBinding MinHeight}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        Width="{TemplateBinding Width}"
                        Background="{TemplateBinding Background}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                        BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <local:ContentPresenterEx
                                x:Name="ContentPresenter"
                                Content="{TemplateBinding Content}" 
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                Foreground="{TemplateBinding Foreground}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="True" />
                            <Border x:Name="ExpandCollapseChevronBorder" 
                                Grid.Row="1"
                                Width="{DynamicResource ExpanderChevronButtonSize}"
                                Height="{DynamicResource ExpanderChevronButtonSize}" 
                                Margin="{DynamicResource ExpanderChevronMargin}" 
                                CornerRadius="{DynamicResource ControlCornerRadius}" 
                                BorderBrush="{DynamicResource ExpanderChevronBorderBrush}"
                                BorderThickness="{DynamicResource ExpanderChevronBorderThickness}" 
                                Background="{DynamicResource ExpanderChevronBackground}">
                                <local:FontIcon
                                    x:Name="ExpandCollapseChevron"
                                    Icon="{x:Static ui:FluentSystemIcons.ChevronLeft_16_Regular}"
                                    FontSize="12"
                                    Width="{DynamicResource ExpanderChevronGlyphSize}" 
                                    Height="{DynamicResource ExpanderChevronGlyphSize}" 
                                    RenderTransformOrigin="0.5, 0.5" 
                                    Foreground="{DynamicResource ExpanderChevronForeground}"
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center">
                                    <FrameworkElement.RenderTransform>
                                        <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0" />
                                    </FrameworkElement.RenderTransform>
                                </local:FontIcon>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPointerOverBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPointerOver}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPointerOverForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPointerOverBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPointerOverBackground}" />
                        </Trigger>

                        <Trigger  Property="IsPressed" Value="True">
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderPressedBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderForegroundPressed}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronPressedForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderPressedBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronPressedBackground}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderHeaderDisabledForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderDisabledBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                            Storyboard.TargetProperty="Angle"
                            To="180.0"
                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                            Storyboard.TargetProperty="Angle"
                            To="0.0"
                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="ToggleButtonGrid" Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource ExpanderHeaderForeground}" />
                            <Setter TargetName="ExpandCollapseChevron" Property="Foreground" Value="{DynamicResource ExpanderChevronForeground}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="BorderBrush" Value="{DynamicResource ExpanderChevronBorderBrush}" />
                            <Setter TargetName="ExpandCollapseChevronBorder" Property="Background" Value="{DynamicResource ExpanderChevronBackground}" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultExpanderStyle" TargetType="Expander">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{DynamicResource ExpanderContentBackground}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinWidth" Value="{DynamicResource FlyoutThemeMinWidth}" />
        <Setter Property="MinHeight" Value="{DynamicResource ExpanderMinHeight}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ExpanderContentDownBorderThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ExpanderContentBorderBrush}" />
        <Setter Property="Padding" Value="{DynamicResource ExpanderContentPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="chelper:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid MinWidth="{TemplateBinding MinWidth}" MaxWidth="{TemplateBinding MaxWidth}">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="Row0" Height="Auto" />
                            <RowDefinition x:Name="Row1" Height="*" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="Column0" Width="Auto" />
                            <ColumnDefinition x:Name="Column1" Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid.Resources>
                            <common:DoubleValueHolder x:Key="TranslationProxy" x:Name="TranslationProxy"/>
                        </Grid.Resources>

                        <ToggleButton x:Name="ExpanderHeader"
                                      Grid.ColumnSpan="2"
                                      AutomationProperties.AutomationId="ExpanderToggleButton"
                                      Background="{DynamicResource ExpanderHeaderBackground}"
                                      BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}"
                                      BorderThickness="{DynamicResource ExpanderHeaderBorderThickness}"
                                      MinHeight="{TemplateBinding MinHeight}"
                                      chelper:FocusVisualHelper.IsTemplateFocusTarget="True"
                                      chelper:ControlHelper.CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}"
                                      IsEnabled="{TemplateBinding IsEnabled}"
                                      Padding="{DynamicResource ExpanderHeaderPadding}"
                                      HorizontalAlignment="Stretch"
                                      HorizontalContentAlignment="{DynamicResource ExpanderHeaderHorizontalContentAlignment}"
                                      VerticalContentAlignment="{DynamicResource ExpanderHeaderVerticalContentAlignment}"
                                      Content="{TemplateBinding Header}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                      IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ExpanderDownHeaderStyle}"/>

                        <!--  The clip is a composition clip applied in code  -->
                        <Border x:Name="ExpanderContentClip" Grid.Row="1"
                                      Grid.ColumnSpan="2">

                            <Border.Clip>
                                <RectangleGeometry>
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource SizeToRectConverter}">
                                            <Binding Source="0" />
                                            <Binding Source="0" />
                                            <Binding
                                                ElementName="ExpanderContent" 
                                                Mode="OneWay"
                                                Path="ActualWidth"/>
                                            <Binding
                                                ElementName="ExpanderContent"
                                                Mode="OneWay"
                                                Path="ActualHeight" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Border.Clip>

                            <Border
                                x:Name="ExpanderContent"
                                MinHeight="{TemplateBinding MinHeight}"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{DynamicResource ExpanderHeaderBackground}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{DynamicResource ExpanderContentDownBorderThickness}"
                                CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius, Converter={StaticResource BottomCornerRadiusFilterConverter}}"
                                Visibility="Collapsed"
                                ClipToBounds="True">
                                <FrameworkElement.RenderTransform>
                                    <TranslateTransform  x:Name="ExpanderContentTranslation" >
                                        <TranslateTransform.X>
                                            <MultiBinding Converter="{StaticResource MultiplyConverter}">
                                                <Binding ElementName="ExpanderContent"
                                                         Path="ActualWidth"
                                                         Mode="OneWay"/>
                                                <Binding Source="{StaticResource TranslationProxy}"
                                                         Path="X"
                                                         Mode="OneWay"/>
                                            </MultiBinding>
                                        </TranslateTransform.X>
                                        <TranslateTransform.Y>
                                            <MultiBinding Converter="{StaticResource MultiplyConverter}">
                                                <Binding ElementName="ExpanderContent"
                                                         Path="ActualHeight"
                                                         Mode="OneWay"/>
                                                <Binding Source="{StaticResource TranslationProxy}"
                                                         Path="Y"
                                                         Mode="OneWay"/>
                                            </MultiBinding>
                                        </TranslateTransform.Y>
                                    </TranslateTransform>
                                </FrameworkElement.RenderTransform>
                                <local:ContentPresenterEx
                                    x:Name="ContentPresenter"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                            </Border>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpanderHeader" Property="Style" Value="{DynamicResource ExpanderUpHeaderStyle}" />
                            <Setter TargetName="ExpanderContent" Property="BorderThickness" Value="{DynamicResource ExpanderContentUpBorderThickness}" />
                            <Setter TargetName="ExpanderContent" Property="CornerRadius" Value="{Binding Path=(chelper:ControlHelper.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="ExpanderContentClip" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ExpanderHeader" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Row0" Property="Height" Value="*" />
                            <Setter TargetName="Row1" Property="Height" Value="Auto" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpanderHeader" Property="Style" Value="{DynamicResource ExpanderRightHeaderStyle}" />
                            <Setter TargetName="ExpanderContent" Property="BorderThickness" Value="{DynamicResource ExpanderContentRightBorderThickness}" />
                            <Setter TargetName="ExpanderContent" Property="CornerRadius" Value="{Binding Path=(chelper:ControlHelper.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
                            <Setter TargetName="ExpanderContentClip" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ExpanderContentClip" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ExpanderContentClip" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="ExpanderContentClip" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="ExpanderHeader" Property="Padding" Value="16,4" />
                            <Setter TargetName="ExpanderHeader" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ExpanderHeader" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="ExpanderHeader" Property="Grid.ColumnSpan" Value="1" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpanderHeader" Property="Style" Value="{DynamicResource ExpanderLeftHeaderStyle}" />
                            <Setter TargetName="ExpanderContent" Property="BorderThickness" Value="{DynamicResource ExpanderContentLeftBorderThickness}" />
                            <Setter TargetName="ExpanderContent" Property="CornerRadius" Value="{Binding Path=(chelper:ControlHelper.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
                            <Setter TargetName="Column0" Property="Width" Value="*" />
                            <Setter TargetName="Column1" Property="Width" Value="Auto" />
                            <Setter TargetName="ExpanderContentClip" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ExpanderContentClip" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ExpanderContentClip" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="ExpanderContentClip" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="ExpanderHeader" Property="Padding" Value="16,4" />
                            <Setter TargetName="ExpanderHeader" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ExpanderHeader" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ExpanderHeader" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="ExpanderHeader" Property="Grid.ColumnSpan" Value="1" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true" />
                                <Condition Property="ExpandDirection" Value="Down" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="ExpandDownStoryboard">
                                    <Storyboard FillBehavior="HoldEnd">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility" >
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslationProxy" Storyboard.TargetProperty="Y">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="-1" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.0, 0.0, 0.0, 1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ExpandDownStoryboard"/>
                            </MultiTrigger.ExitActions>
                            
                            <MultiTrigger.Setters>
                                <Setter TargetName="ExpanderHeader" Property="chelper:ControlHelper.CornerRadius" Value="{Binding Path=(chelper:ControlHelper.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="False" />
                                <Condition Property="ExpandDirection" Value="Down" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="CollapseUpStoryboard">
                                    <Storyboard FillBehavior="HoldEnd">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility" >
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.167" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslationProxy" Storyboard.TargetProperty="Y">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.167" Value="-1" KeySpline="1.0, 1.0, 0.0, 1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="CollapseUpStoryboard"/>
                            </MultiTrigger.ExitActions>

                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true" />
                                <Condition Property="ExpandDirection" Value="Right" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="ExpandRightStoryboard">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility" >
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslationProxy" Storyboard.TargetProperty="X">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="-1" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.0, 0.0, 0.0, 1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ExpandRightStoryboard"/>
                            </MultiTrigger.ExitActions>

                            <MultiTrigger.Setters>
                                <Setter TargetName="ExpanderHeader" Property="chelper:ControlHelper.CornerRadius" Value="{Binding Path=(chelper:ControlHelper.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="False" />
                                <Condition Property="ExpandDirection" Value="Right" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="CollapseLeftStoryboard">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility" >
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.167" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslationProxy" Storyboard.TargetProperty="X">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.167" Value="-1" KeySpline="1.0, 1.0, 0.0, 1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="CollapseLeftStoryboard"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true" />
                                <Condition Property="ExpandDirection" Value="Up" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="ExpandUpStoryboard">
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard FillBehavior="HoldEnd">
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility" >
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslationProxy" Storyboard.TargetProperty="Y">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.0, 0.0, 0.0, 1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ExpandUpStoryboard"/>
                            </MultiTrigger.ExitActions>
                            
                            <MultiTrigger.Setters>
                                <Setter TargetName="ExpanderHeader" Property="chelper:ControlHelper.CornerRadius" Value="{Binding Path=(chelper:ControlHelper.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="False" />
                                <Condition Property="ExpandDirection" Value="Up" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="CollapseDownStoryboard">
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard FillBehavior="HoldEnd">
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility" >
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslationProxy" Storyboard.TargetProperty="Y">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.167" Value="1" KeySpline="1.0, 1.0, 0.0, 1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="CollapseDownStoryboard"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="true" />
                                <Condition Property="ExpandDirection" Value="Left" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="ExpandLeftStoryboard">
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility" >
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslationProxy" Storyboard.TargetProperty="X">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.0, 0.0, 0.0, 1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ExpandLeftStoryboard"/>
                            </MultiTrigger.ExitActions>

                            <MultiTrigger.Setters>
                                <Setter TargetName="ExpanderHeader" Property="chelper:ControlHelper.CornerRadius" Value="{Binding Path=(chelper:ControlHelper.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded" Value="False" />
                                <Condition Property="ExpandDirection" Value="Left" />
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="CollapseRightStoryboard">
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility" >
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TranslationProxy" Storyboard.TargetProperty="X">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.167" Value="1" KeySpline="1.0, 1.0, 0.0, 1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="CollapseRightStoryboard"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultExpanderStyle}" TargetType="Expander" />

    <Style x:Key="ExpanderCardStyle" TargetType="Expander" BasedOn="{StaticResource DefaultExpanderStyle}"/>

</ResourceDictionary>